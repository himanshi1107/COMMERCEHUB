{"ast":null,"code":"import axios from \"axios\";\nimport { CREATE_ORDER_FAILURE, CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, GET_ORDER_BY_ID_FAILURE, GET_ORDER_BY_ID_REQUEST, GET_ORDER_BY_ID_SUCCESS, GET_ORDER_HISTORY_FAILURE, GET_ORDER_HISTORY_REQUEST, GET_ORDER_HISTORY_SUCCESS } from \"./ActionType\";\nimport api, { API_BASE_URL } from \"../../../config/api\";\nexport const createOrder = reqData => async dispatch => {\n  console.log(\"req data \", reqData);\n  try {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${reqData.jwt}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${API_BASE_URL}/api/orders/`, reqData.address, config);\n    if (data.id) {\n      reqData.navigate({\n        search: `step=3&order_id=${data.id}`\n      });\n    }\n    console.log(\"created order - \", data);\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"catch error : \", error);\n    dispatch({\n      type: CREATE_ORDER_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderById = orderId => async dispatch => {\n  console.log(\"get order req \", orderId);\n  try {\n    dispatch({\n      type: GET_ORDER_BY_ID_REQUEST\n    });\n    const {\n      data\n    } = await api.get(`/api/orders/${orderId}`);\n    console.log(\"order by id \", data);\n    dispatch({\n      type: GET_ORDER_BY_ID_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"catch \", error);\n    dispatch({\n      type: GET_ORDER_BY_ID_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderHistory = reqData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GET_ORDER_HISTORY_REQUEST\n    });\n    const config = {\n      headers: {\n        Authorization: `Bearer ${reqData.jwt}`\n      }\n    };\n    const {\n      data\n    } = await api.get(`/api/orders/user`);\n    console.log(\"order history -------- \", data);\n    dispatch({\n      type: GET_ORDER_HISTORY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ORDER_HISTORY_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","CREATE_ORDER_FAILURE","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","GET_ORDER_BY_ID_FAILURE","GET_ORDER_BY_ID_REQUEST","GET_ORDER_BY_ID_SUCCESS","GET_ORDER_HISTORY_FAILURE","GET_ORDER_HISTORY_REQUEST","GET_ORDER_HISTORY_SUCCESS","api","API_BASE_URL","createOrder","reqData","dispatch","console","log","type","config","headers","Authorization","jwt","data","post","address","id","navigate","search","payload","error","response","message","getOrderById","orderId","get","getOrderHistory","getState"],"sources":["D:/Practice Project/commercehub/src/Redux/Customers/Order/Action.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  CREATE_ORDER_FAILURE,\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  GET_ORDER_BY_ID_FAILURE,\r\n  GET_ORDER_BY_ID_REQUEST,\r\n  GET_ORDER_BY_ID_SUCCESS,\r\n  GET_ORDER_HISTORY_FAILURE,\r\n  GET_ORDER_HISTORY_REQUEST,\r\n  GET_ORDER_HISTORY_SUCCESS,\r\n} from \"./ActionType\";\r\nimport api, { API_BASE_URL } from \"../../../config/api\";\r\n\r\nexport const createOrder = (reqData) => async (dispatch) => {\r\n  console.log(\"req data \", reqData);\r\n  try {\r\n    dispatch({ type: CREATE_ORDER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${reqData.jwt}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `${API_BASE_URL}/api/orders/`,\r\n      reqData.address,\r\n      config\r\n    );\r\n    if (data.id) {\r\n      reqData.navigate({ search: `step=3&order_id=${data.id}` });\r\n    }\r\n    console.log(\"created order - \", data);\r\n    dispatch({\r\n      type: CREATE_ORDER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log(\"catch error : \", error);\r\n    dispatch({\r\n      type: CREATE_ORDER_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderById = (orderId) => async (dispatch) => {\r\n  console.log(\"get order req \", orderId);\r\n  try {\r\n    dispatch({ type: GET_ORDER_BY_ID_REQUEST });\r\n\r\n    const { data } = await api.get(\r\n      `/api/orders/${orderId}`,\r\n      \r\n    );\r\n    console.log(\"order by id \", data);\r\n    dispatch({\r\n      type: GET_ORDER_BY_ID_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log(\"catch \",error)\r\n    dispatch({\r\n      type: GET_ORDER_BY_ID_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderHistory = (reqData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GET_ORDER_HISTORY_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${reqData.jwt}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await api.get(`/api/orders/user`);\r\n    console.log(\"order history -------- \", data);\r\n    dispatch({\r\n      type: GET_ORDER_HISTORY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ORDER_HISTORY_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}