{"ast":null,"code":"import { CREATE_REVIEW_SUCCESS, CREATE_REVIEW_FAILURE, GET_ALL_REVIEWS_SUCCESS, GET_ALL_REVIEWS_FAILURE, CREATE_RATING_SUCCESS, CREATE_RATING_FAILURE, GET_ALL_RATINGS_SUCCESS, GET_ALL_RATINGS_FAILURE } from './ActionTyp';\nimport api from '../../../config/api';\nexport const createReview = resData => {\n  console.log(\"create review req \", resData);\n  return async dispatch => {\n    try {\n      const response = await api.post('/api/reviews/create', resData);\n      dispatch({\n        type: CREATE_REVIEW_SUCCESS,\n        payload: response.data\n      });\n      console.log(\"create review \", response.data);\n    } catch (error) {\n      dispatch({\n        type: CREATE_REVIEW_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const getAllReviews = productId => {\n  return async dispatch => {\n    try {\n      const response = await api.get(`/api/reviews/product/${productId}`);\n      dispatch({\n        type: GET_ALL_REVIEWS_SUCCESS,\n        payload: response.data\n      });\n      console.log(\"all review \", response.data);\n    } catch (error) {\n      dispatch({\n        type: GET_ALL_REVIEWS_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const createRating = resData => {\n  return async dispatch => {\n    try {\n      const response = await api.post('/api/ratings/create', resData);\n      dispatch({\n        type: CREATE_RATING_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CREATE_RATING_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const getAllRatings = productId => {\n  // console.log(\"product id review \",productId)\n  return async dispatch => {\n    try {\n      const response = await api.get(`/api/ratings/product/${productId}`, {});\n      dispatch({\n        type: GET_ALL_RATINGS_SUCCESS,\n        payload: response.data\n      });\n      console.log(\"all rating \", response.data);\n    } catch (error) {\n      dispatch({\n        type: GET_ALL_RATINGS_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["CREATE_REVIEW_SUCCESS","CREATE_REVIEW_FAILURE","GET_ALL_REVIEWS_SUCCESS","GET_ALL_REVIEWS_FAILURE","CREATE_RATING_SUCCESS","CREATE_RATING_FAILURE","GET_ALL_RATINGS_SUCCESS","GET_ALL_RATINGS_FAILURE","api","createReview","resData","console","log","dispatch","response","post","type","payload","data","error","message","getAllReviews","productId","get","createRating","getAllRatings"],"sources":["D:/Practice Project/commercehub/src/Redux/Customers/Review/Action.js"],"sourcesContent":["\r\n\r\n\r\nimport {\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAILURE,\r\n    GET_ALL_REVIEWS_SUCCESS,\r\n    GET_ALL_REVIEWS_FAILURE,\r\n    CREATE_RATING_SUCCESS,\r\n    CREATE_RATING_FAILURE,\r\n    GET_ALL_RATINGS_SUCCESS,\r\n    GET_ALL_RATINGS_FAILURE\r\n  } from './ActionTyp';\r\nimport api from '../../../config/api';\r\n\r\nexport const createReview = (resData) => {\r\n  console.log(\"create review req \",resData)\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await api.post('/api/reviews/create', \r\n        resData);\r\n\r\n      dispatch({\r\n        type: CREATE_REVIEW_SUCCESS,\r\n        payload: response.data\r\n      });\r\n      console.log(\"create review \",response.data)\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CREATE_REVIEW_FAILURE,\r\n        payload: error.message\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getAllReviews = (productId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await api.get(`/api/reviews/product/${productId}`);\r\n\r\n      dispatch({\r\n        type: GET_ALL_REVIEWS_SUCCESS,\r\n        payload: response.data\r\n      });\r\n      console.log(\"all review \",response.data)\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_ALL_REVIEWS_FAILURE,\r\n        payload: error.message\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const createRating = (resData) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await api.post('/api/ratings/create', \r\n        resData);\r\n\r\n      dispatch({\r\n        type: CREATE_RATING_SUCCESS,\r\n        payload: response.data\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CREATE_RATING_FAILURE,\r\n        payload: error.message\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getAllRatings = (productId) => {\r\n  // console.log(\"product id review \",productId)\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await api.get(`/api/ratings/product/${productId}`, {\r\n       \r\n      });\r\n\r\n      dispatch({\r\n        type: GET_ALL_RATINGS_SUCCESS,\r\n        payload: response.data\r\n      });\r\n      console.log(\"all rating \",response.data)\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_ALL_RATINGS_FAILURE,\r\n        payload: error.message\r\n      });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAGA,SACIA,qBAAqB,EACrBC,qBAAqB,EACrBC,uBAAuB,EACvBC,uBAAuB,EACvBC,qBAAqB,EACrBC,qBAAqB,EACrBC,uBAAuB,EACvBC,uBAAuB,QAClB,aAAa;AACtB,OAAOC,GAAG,MAAM,qBAAqB;AAErC,OAAO,MAAMC,YAAY,GAAIC,OAAO,IAAK;EACvCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAACF,OAAO,CAAC;EACzC,OAAO,MAAOG,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,qBAAqB,EACnDL,OAAO,CAAC;MAEVG,QAAQ,CAAC;QACPG,IAAI,EAAEhB,qBAAqB;QAC3BiB,OAAO,EAAEH,QAAQ,CAACI;MACpB,CAAC,CAAC;MACFP,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAACE,QAAQ,CAACI,IAAI,CAAC;IAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdN,QAAQ,CAAC;QACPG,IAAI,EAAEf,qBAAqB;QAC3BgB,OAAO,EAAEE,KAAK,CAACC;MACjB,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,aAAa,GAAIC,SAAS,IAAK;EAC1C,OAAO,MAAOT,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACe,GAAG,CAAC,wBAAwBD,SAAS,EAAE,CAAC;MAEnET,QAAQ,CAAC;QACPG,IAAI,EAAEd,uBAAuB;QAC7Be,OAAO,EAAEH,QAAQ,CAACI;MACpB,CAAC,CAAC;MACFP,OAAO,CAACC,GAAG,CAAC,aAAa,EAACE,QAAQ,CAACI,IAAI,CAAC;IAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdN,QAAQ,CAAC;QACPG,IAAI,EAAEb,uBAAuB;QAC7Bc,OAAO,EAAEE,KAAK,CAACC;MACjB,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC;AAID,OAAO,MAAMI,YAAY,GAAId,OAAO,IAAK;EACvC,OAAO,MAAOG,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,qBAAqB,EACnDL,OAAO,CAAC;MAEVG,QAAQ,CAAC;QACPG,IAAI,EAAEZ,qBAAqB;QAC3Ba,OAAO,EAAEH,QAAQ,CAACI;MACpB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdN,QAAQ,CAAC;QACPG,IAAI,EAAEX,qBAAqB;QAC3BY,OAAO,EAAEE,KAAK,CAACC;MACjB,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMK,aAAa,GAAIH,SAAS,IAAK;EAC1C;EACA,OAAO,MAAOT,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACe,GAAG,CAAC,wBAAwBD,SAAS,EAAE,EAAE,CAEpE,CAAC,CAAC;MAEFT,QAAQ,CAAC;QACPG,IAAI,EAAEV,uBAAuB;QAC7BW,OAAO,EAAEH,QAAQ,CAACI;MACpB,CAAC,CAAC;MACFP,OAAO,CAACC,GAAG,CAAC,aAAa,EAACE,QAAQ,CAACI,IAAI,CAAC;IAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdN,QAAQ,CAAC;QACPG,IAAI,EAAET,uBAAuB;QAC7BU,OAAO,EAAEE,KAAK,CAACC;MACjB,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}